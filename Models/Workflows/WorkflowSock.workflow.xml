<!--
Copyright (c) CLMS. All rights reserved.
Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->

{"$type":"CLMS.AppDev.DomainModel.Models.Workflow, CLMS.AppDev.DomainModel","Steps":[{"$type":"CLMS.AppDev.DomainModel.Models.WorkflowStep, CLMS.AppDev.DomainModel","CreatesPendingJob":false,"IsAvailableToAllAuthenticated":true,"IsAvailableToAllAnonymous":true,"Permissions":null,"Body":{"$type":"CLMS.AppDev.DomainModel.Models.WorkflowBody, CLMS.AppDev.DomainModel","Type":0,"Implementation":"function void Implementation()\r\n{\r\n\tWebLib.SocketClient socket = null;\r\n\ttry {\r\n\t    socket = WebLib.SocketClient.GetConnection(\"SarmedPortal\");\r\n\t} catch Exception e {\r\n    \tDebugLib.Logger.WriteErrorLine(e.Message);\r\n\t}\r\n\t\r\n\ttry {\r\n\t\tif (socket == null || !socket.IsConnected) {\r\n\t\t    if (socket != null) {\r\n\t\t        DebugLib.Logger.WriteErrorLine(\"Socket disconnected. Reconnecting...\");\r\n\t\t   \t\tWebLib.SocketClient.CloseConnection(\"SarmedPortal\");\r\n\t\t   }\r\n\t\t   Domain.PubSub.SubscribeOrders();\r\n\t\t   DebugLib.Logger.WriteInfoLine(\"Socket reconnected successfully!\");\r\n\t\t}\r\n\t} catch Exception x {\r\n\t\tDebugLib.Logger.WriteErrorLine(x.Message);\r\n\t    DebugLib.Logger.WriteErrorLine(x.StackTrace);\r\n\t}\r\n}","Condition":"function bool Condition()\r\n{\n\treturn true;\n}"},"Name":"ReconnectSockets","Description":null}],"Inputs":[],"Outputs":[],"HasScheduling":true,"Schedule":{"$type":"CLMS.AppDev.DomainModel.Models.WorkflowSchedule, CLMS.AppDev.DomainModel","StartDate":"01/02/2017 9:29","ExpireDate":"30/06/2017 9:29","Day":"*","WeekDay":"*","Minute":"*","Hour":"*","Month":"*","IsValid":true},"ModelName":"WorkflowSock","ModelCreator":"v.vasilopoulos@clmsuk.com","ModelDescription":null,"DateCreated":null,"Version":null}