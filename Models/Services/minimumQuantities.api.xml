<!--
Copyright (c) CLMS. All rights reserved.
Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->

<ExposedApi DateCreated="" Model_Name="minimumQuantities" Model_Description="Receives a Collection of Minimum Quantities regarding the Items. If all entries are imported successfully, returns a success message. If not, returns a failure message." Version="0.1.0">
  <Operations>
    <Operation Verb="Post" Path="import" ReturnDataType="Domain.Response" Name="Import" Description="Import Minimum Quantities" AllowAnonymousUsers="False" AllowAllAuthenticated="True" EnableAccessLog="True" ResponseSample="" RequestSample="" AllowPermisssions="" ApplicationTags="">
      <Parameters>
        <Parameter DataType="Collection[Domain.MinimumQuantity]" Required="True" Name="minQuantities" Description="" />
      </Parameters>
      <Code>function Domain.Response Import(Collection[Domain.MinimumQuantity] minQuantities)
{
	string message;
	
	foreach Domain.MinimumQuantity: minQ in minQuantities {
//	    DebugLib.Logger.WriteInfoLine("Item: " + minQ.Item.SKU);
		if (minQ.Item == null || minQ.Supplier == null) {
			message = message + minQ.Id + " ,";
		    continue;
		}
		Domain.Item existingItem = Domain.Item.Find(s=&gt; s.SKU == minQ.Item.SKU).First();
		Domain.Supplier existingSupplier = Domain.Supplier.Find(w=&gt; w.Code == minQ.Supplier.Code).First();
		if (existingItem == null || existingSupplier == null) {
		    message = message + minQ.Id + " ,";
		    continue;
		}
		Domain.MinimumQuantity newMinQuantity;
		newMinQuantity.Supplier = existingSupplier;
		newMinQuantity.Country = minQ.Country;
		newMinQuantity.Item = existingItem;
		newMinQuantity.Quantity = minQ.Quantity;
		newMinQuantity.Save();
		DebugLib.Logger.WriteInfoLine("Min Quantity: " + minQ.Quantity + " for item: " + existingItem.SKU);
	}
	if (!string.IsNullOrEmpty(message)) {
	    DebugLib.Logger.WriteWarnLine("Error message: " + message);
	    return Domain.Response.GenerateResponse("Failed", "Failed to import the stocks with Ids " + message, "", "-1");
	}
	
	return Domain.Response.GenerateResponse("Succeed", "All entries imported successfully.", "", "1");
}</Code>
      <CachingOptions CachePerUser="false" OperationIsCached="false" OverrideDefaultCachingSettings="false" UseCustomExpirationMethod="false" ExpirationDays="0" ExpirationHours="0" ExpirationMinutes="3" ExpirationSeconds="0" ExpirationMilliseconds="0" CacheMode="None">function TimeSpan Expiration(
	Collection[Domain.MinimumQuantity] minQuantities,
	Domain.Response response
)
{ 
	 return CommonLib.Utilities.CreateTimeSpan(0, 1, 0); 
}</CachingOptions>
    </Operation>
  </Operations>
  <DataContracts>
    <DataContract Name="" Class="Domain.Item" BaseClass="">
      <Members>
        <Member Name="SKU" DataType="string" Checked="True" />
        <Member Name="Description" DataType="string" Checked="True" />
        <Member Name="UPC" DataType="string" Checked="True" />
        <Member Name="ItemsForecast" DataType="Collection[Domain.Sales]" Checked="False" />
        <Member Name="StocksOnHand" DataType="Collection[Domain.StockOnHand]" Checked="False" />
        <Member Name="MinimumQuantity" DataType="Domain.MinimumQuantity" Checked="False" />
      </Members>
    </DataContract>
    <DataContract Name="" Class="Domain.MinimumQuantity" BaseClass="">
      <Members>
        <Member Name="Id" DataType="int" Checked="False" />
        <Member Name="Country" DataType="string" Checked="True" />
        <Member Name="Quantity" DataType="int" Checked="True" />
        <Member Name="Item" DataType="Domain.Item" Checked="True" />
        <Member Name="Supplier" DataType="Domain.Supplier" Checked="True" />
      </Members>
    </DataContract>
    <DataContract Name="" Class="Domain.Response" BaseClass="">
      <Members>
        <Member Name="Id" DataType="int" Checked="False" />
        <Member Name="Status" DataType="string" Checked="True" />
        <Member Name="Message" DataType="string" Checked="True" />
        <Member Name="Details" DataType="string" Checked="True" />
        <Member Name="Code" DataType="string" Checked="True" />
      </Members>
    </DataContract>
    <DataContract Name="" Class="Domain.Supplier" BaseClass="Company">
      <Members>
        <Member Name="Id" DataType="int" Checked="False" />
        <Member Name="Code" DataType="string" Checked="True" />
        <Member Name="Name" DataType="string" Checked="True" />
      </Members>
    </DataContract>
  </DataContracts>
</ExposedApi>