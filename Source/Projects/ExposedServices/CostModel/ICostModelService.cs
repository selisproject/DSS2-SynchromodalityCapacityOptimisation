// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using DSS2_SynchromodalityCapacityOptimisation.Services.CostModel.DataContracts;

namespace DSS2_SynchromodalityCapacityOptimisation.Services
{
    [XmlSerializerFormat]
    [ServiceContract]
    public interface ICostModelService
    {
        [OperationContract]
        decimal? CalculateCost(decimal? driverSalary, decimal? avWorkH, decimal? avServiceH, decimal? vehiculeAnnualHours, decimal? vehiculeAnnualDays, decimal? costOfReplacementVehicule, decimal? daysReplacementVehicule, decimal? amortizationPeriod, decimal? utilisationPeriod, decimal? residualValue, decimal? maintainanceCost, decimal? vehiculeInsuranceCost, decimal? goodsInsurancecCost, decimal? roadTax, decimal? vehiculePurchaseCost, string amortizationType, decimal? totalDistanceDriven, decimal? totalDistanceService, decimal? cNGDistance, decimal? fuelDistance, decimal? dieselDistance, decimal? cNGCost, decimal? cNGConsumption, decimal? fuelCost, decimal? fuelConsumption, decimal? dieselCost, decimal? dieselConsumption, decimal? refriCost, decimal? lettering, decimal? totalDistanceVehicule, decimal? oilCost, decimal? oilConsumption, decimal? tireCost, decimal? distancePerTire, decimal? yearlyReparationCost, decimal? routeDistance, decimal? routeTime, decimal? overHeadFactor, string _RequestSourceIp, string _UserName);


    }
}