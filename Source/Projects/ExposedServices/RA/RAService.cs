// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using System.ServiceModel.Channels;
using System.Security.Permissions;
using System.Security.Principal;
using NHibernate;
using System.ServiceModel.Activation;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using DSS2_SynchromodalityCapacityOptimisation.Services.RA.DataContracts;
using DSS2_SynchromodalityCapacityOptimisation.BO;
using AutoMapper;

namespace DSS2_SynchromodalityCapacityOptimisation.Services
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Required)]
    public class RAService : IRAService
    {
        public RegionalAgentUserDTO GetRA(string _raname, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputraname = _raname;
                var _getRA = GetRAImplementation(inputraname);
                var result = Mapper.Map<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser, RegionalAgentUserDTO>(_getRA);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public OrderWMSDTO GetOrderWMS(int? _id, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputid = _id;
                var _getOrderWMS = GetOrderWMSImplementation(inputid);
                var result = Mapper.Map<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS, OrderWMSDTO>(_getOrderWMS);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public void SaveOrder(OrderWMSDTO _order, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputorder = Mapper.Map<OrderWMSDTO, DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(_order);
                SaveOrderImplementation(inputorder);
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public TruckDriverDTO GetTruckDriver(string _username, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputusername = _username;
                var _getTruckDriver = GetTruckDriverImplementation(inputusername);
                var result = Mapper.Map<DSS2_SynchromodalityCapacityOptimisation.BO.TruckDriver, TruckDriverDTO>(_getTruckDriver);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public System.Collections.Generic.List<OrderWMSDTO> GetAllOrderWMS(string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var _getAllOrderWMS = GetAllOrderWMSImplementation();
                var result = Mapper.Map<System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>, System.Collections.Generic.List<OrderWMSDTO>>(_getAllOrderWMS);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public System.Collections.Generic.List<OrderWMSDTO> GetOrderByTruck(string _plateNumber, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputplateNumber = _plateNumber;
                var _getOrderByTruck = GetOrderByTruckImplementation(inputplateNumber);
                var result = Mapper.Map<System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>, System.Collections.Generic.List<OrderWMSDTO>>(_getOrderByTruck);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }
        public System.Collections.Generic.List<OrderWMSDTO> GetOrderByAgency(string _agencyCode, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputagencyCode = _agencyCode;
                var _getOrderByAgency = GetOrderByAgencyImplementation(inputagencyCode);
                var result = Mapper.Map<System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>, System.Collections.Generic.List<OrderWMSDTO>>(_getOrderByAgency);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("RA Service").Error(@exception);
                throw;
            }
        }


        private void InitializeMappers()
        {
            Mapper.CreateMap<GeoAreaDTO, DSS2_SynchromodalityCapacityOptimisation.BO.GeoArea>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.GeoArea, GeoAreaDTO>();
            Mapper.CreateMap<GeoCoordinatesDTO, DSS2_SynchromodalityCapacityOptimisation.BO.GeoCoordinates>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.GeoCoordinates, GeoCoordinatesDTO>();
            Mapper.CreateMap<OrderWMSDTO, DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS, OrderWMSDTO>();
            Mapper.CreateMap<RegionalAgentDTO, DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent, RegionalAgentDTO>();
            Mapper.CreateMap<RegionalAgentUserDTO, DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser, RegionalAgentUserDTO>();
            Mapper.CreateMap<ScheduledRouteTemplateDTO, DSS2_SynchromodalityCapacityOptimisation.BO.ScheduledRouteTemplate>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.ScheduledRouteTemplate, ScheduledRouteTemplateDTO>();
            Mapper.CreateMap<TruckDTO, DSS2_SynchromodalityCapacityOptimisation.BO.Truck>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.Truck, TruckDTO>();
            Mapper.CreateMap<TruckDriverDTO, DSS2_SynchromodalityCapacityOptimisation.BO.TruckDriver>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.TruckDriver, TruckDriverDTO>();
            Mapper.CreateMap<WarehouseDTO, DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse>();
            Mapper.CreateMap<DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse, WarehouseDTO>();
        }

        public static DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser GetRAImplementation(string raname)
        {
            DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser rauser = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAsQueryable<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgentUser>((us) => us.UserName == raname)?.FirstOrDefault();
            return rauser;
        }

        public static DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS GetOrderWMSImplementation(int? id)
        {
            return  new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetById<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(id);
        }

        public static void SaveOrderImplementation(DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS order)
        {
            new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Save<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(order);
        }

        public static DSS2_SynchromodalityCapacityOptimisation.BO.TruckDriver GetTruckDriverImplementation(string username)
        {
            return new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAsQueryable<DSS2_SynchromodalityCapacityOptimisation.BO.TruckDriver>((truck) => truck.UserName == username)?.FirstOrDefault();
        }

        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> GetAllOrderWMSImplementation()
        {
            return new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>();
        }

        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> GetOrderByTruckImplementation(string plateNumber)
        {
            return new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Get<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>((order) => order.Truck == plateNumber);
        }

        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> GetOrderByAgencyImplementation(string agencyCode)
        {
            return new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Get<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>((ord) => ord.OrdAgencyCode == agencyCode);
        }


    }
}