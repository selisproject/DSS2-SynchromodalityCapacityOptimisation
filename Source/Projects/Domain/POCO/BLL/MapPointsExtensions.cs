
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS2_SynchromodalityCapacityOptimisation.DAL;

namespace DSS2_SynchromodalityCapacityOptimisation.BO
{
	/// <summary>
	/// The MapPoints extensions
	/// </summary>
	public static class MapPointsExtensions
	{
        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints> InitMapPoints(bool allOrders, string raCode, bool allRAs){using (new zAppDev.DotNet.Framework.Profiling.Profiler("MapPoints", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "InitMapPoints")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints> mapPoints = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints>();
try {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> or = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>();
if ((allOrders)) {
var _count0 = 0;or = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(1, 30,out _count0).ToList();}
else {
if ((raCode != null)) {
or?.AddRange(new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Get<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>((ord) => ord.OrdAgencyCode == raCode));
}
}
foreach (var order in or ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>()) {
var _var0 = order?.Warehouse;DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse warehouse = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAsQueryable<DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse>((wr) => wr.Title == _var0)?.FirstOrDefault();
if ((warehouse?.GeoCoordinates != null)) {
float? originLat = (warehouse?.GeoCoordinates?.Latitude ?? 0);
float? originLong = (warehouse?.GeoCoordinates?.Longitude ?? 0);
if ((((((mapPoints?.Any((mp) => mp.Lat == originLat && mp.Long == originLong) ?? false))) == false))) {
DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints warehouseMapPoint = new DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints();
warehouseMapPoint.Lat = originLat;warehouseMapPoint.Long = originLong;warehouseMapPoint.Title = (warehouse?.Title ?? "");warehouseMapPoint.Icon = "http://apps.zappdev.com/SARMEDAgentPortal_1215_vvasilopoulos/Resources/Images/industries.png";mapPoints?.Add(warehouseMapPoint);
}
}
}
if ((allRAs)) {
foreach (var regionalAgent in new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent>() ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent>()) {
foreach (var truck in regionalAgent?.Trucks ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.Truck>()) {
if ((truck?.CurrentLocation == null)) {
continue;}
DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints mapPointTruck = new DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints();
mapPointTruck.Lat = (truck?.CurrentLocation?.Latitude ?? 0);mapPointTruck.Long = (truck?.CurrentLocation?.Longitude ?? 0);mapPointTruck.Icon = "http://apps.zappdev.com/SARMEDAgentPortal_1215_vvasilopoulos/Resources/Images/transport.png";mapPointTruck.Type = "Truck";mapPointTruck.Title = (truck?.PlateNumber ?? "");mapPoints?.Add(mapPointTruck);
}
if ((regionalAgent?.AddressCoordinates == null)) {
continue;}
DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints mapPoint = new DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints();
mapPoint.Lat = (regionalAgent?.AddressCoordinates?.Latitude ?? 0);mapPoint.Long = (regionalAgent?.AddressCoordinates?.Longitude ?? 0);mapPoint.Title = (regionalAgent?.AgencyDescription ?? "");mapPoint.Type = "RegionalAgent";mapPoint.Icon = "http://apps.zappdev.com/SARMEDAgentPortal_1215_vvasilopoulos/Resources/Images/industries.png";mapPoints?.Add(mapPoint);
}
}
else {
if (((((raCode == null || raCode == "")) == false))) {
DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent regionalAgent = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAsQueryable<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent>((rag) => rag.AgencyCode == raCode)?.FirstOrDefault();
if ((regionalAgent?.AddressCoordinates != null)) {
DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints mapPoint = new DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints();
mapPoint.Lat = (regionalAgent?.AddressCoordinates?.Latitude ?? 0);mapPoint.Long = (regionalAgent?.AddressCoordinates?.Longitude ?? 0);mapPoint.Title = (regionalAgent?.AgencyDescription ?? "");mapPoint.Type = "RegionalAgent";mapPoint.Icon = "http://apps.zappdev.com/SARMEDAgentPortal_1215_vvasilopoulos/Resources/Images/industries.png";mapPoints?.Add(mapPoint);
foreach (var truck in regionalAgent?.Trucks ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.Truck>()) {
if ((truck?.CurrentLocation == null)) {
continue;}
DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints mapPointTruck = new DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints();
mapPointTruck.Lat = (truck?.CurrentLocation?.Latitude ?? 0);mapPointTruck.Long = (truck?.CurrentLocation?.Longitude ?? 0);mapPointTruck.Icon = "http://apps.zappdev.com/SARMEDAgentPortal_1215_vvasilopoulos/Resources/Images/transport.png";mapPointTruck.Type = "Truck";mapPointTruck.Title = (truck?.PlateNumber ?? "");mapPoints?.Add(mapPointTruck);
}
}
}
}
}
catch (System.Exception x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "MapPoints",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
return mapPoints;
}
}


public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints> OrderDirections(int? id){using (new zAppDev.DotNet.Framework.Profiling.Profiler("MapPoints", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "OrderDirections")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints> mapPoints = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.MapPoints>();
try {
DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS order =  new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetById<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(id);
}
catch (System.Exception x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "MapPoints",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
return mapPoints;
}
}



        
	}
}
