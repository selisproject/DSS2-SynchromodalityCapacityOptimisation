
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS2_SynchromodalityCapacityOptimisation.DAL;

namespace DSS2_SynchromodalityCapacityOptimisation.BO
{
	/// <summary>
	/// The PubSub extensions
	/// </summary>
	public static class PubSubExtensions
	{
        public static void SubscribeOrders(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeOrders")) {
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot portal = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
portal.authHash = "SarmedPortal";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortal", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + portal.authHash + "\"}\n");
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "Listening for orders... (" + portal.authHash + ")");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x.Message);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x.StackTrace);
throw x;
}
}
}


public static void SubscribeGPS(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeGPS")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "GPS socket listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalGPS";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalGPS", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + derp.authHash + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeRecommendation(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeRecommendation")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA Recommendation listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalRecommendation";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalRecommendation", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalRecommendation" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeAVGTime(this BO.PubSub @this){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeAVGTime")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA AVGTime listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalAvgTime";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalAvgTime", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalAvgTime" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeETA(this BO.PubSub @this){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeETA")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA ETA listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalETA";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalETA", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalETA" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeNTUAETA(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeNTUAETA")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA ETA listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalETA";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalETA", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalETA" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeNTUAAVGTime(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeNTUAAVGTime")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA AVGTime listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalAvgTime";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalAvgTime", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalAvgTime" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}


public static void SubscribeCOE(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("PubSub", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "SubscribeCOE")) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Info, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "NTUA CO2 listening");
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot derp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.LocalPubSub.SubRoot();
derp.authHash = "SarmedPortalCO2";try {
zAppDev.DotNet.Framework.Sockets.SocketClient sock = zAppDev.DotNet.Framework.Sockets.SocketClient.CreateConnection("SarmedPortalCO2", "147.102.4.108", 20004);
sock.Send("{ \"authHash\" : \"" + "SarmedPortalCO2" + "\"}\n");
sock.StartReceiving((data) => {return zAppDev.DotNet.Framework.Data.MiniSessionManager.ExecuteInUoW(manager => { string str = System.Text.Encoding.UTF8.GetString(data);
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "str:  " + str);
DSS2_SynchromodalityCapacityOptimisation.BO.UtilsExtensions.DeserializeMessage(str);
return true;
});}, "\n");
}
catch (zAppDev.DotNet.Framework.Exceptions.BusinessException x) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Error, "PubSub",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, x);
}
}
}



        
	}
}
