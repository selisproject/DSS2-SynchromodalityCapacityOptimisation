
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS2_SynchromodalityCapacityOptimisation.DAL;

namespace DSS2_SynchromodalityCapacityOptimisation.BO
{
	/// <summary>
	/// The OrderForecastStatistic extensions
	/// </summary>
	public static class OrderForecastStatisticExtensions
	{
        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic> ShowOrderForecastStats(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("OrderForecastStatistic", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "ShowOrderForecastStats")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic> orderFStatistics = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic>();
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails> orderProposals = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAsQueryable<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails>()?.Take(10).ToList();
foreach (var orderProposal in orderProposals ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails>()) {
zAppDev.DotNet.Framework.Utilities.DebugHelper.Log(zAppDev.DotNet.Framework.Utilities.DebugMessageType.Warning, "OrderForecastStatistic",  DSS2_SynchromodalityCapacityOptimisation.Hubs.EventsHub.RaiseDebugMessage, "------ " + (orderProposal?.Id?.ToString() ?? ""), true);
DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic orderFStat = new DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic();
orderFStat.Quantity = (orderProposal?.Quantity ?? 0);orderFStat.RoundQuantity = (orderProposal?.RoundQuantity ?? 0);orderFStat.OrderDate = (orderProposal?.RecommendedOrderDate?.Date ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);orderFStat.OrderDateFormatted = (orderProposal?.RecommendedOrderDate?.ToString("MMMM dd, yyyy") ?? "");orderFStat.Item = orderProposal?.Item;orderFStat.Warehouse = orderProposal?.Warehouse;orderFStatistics?.Add(orderFStat);
}
return orderFStatistics;
}
}


public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic> OrderForecastForSKU(DSS2_SynchromodalityCapacityOptimisation.BO.Item item){using (new zAppDev.DotNet.Framework.Profiling.Profiler("OrderForecastStatistic", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "OrderForecastForSKU")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic> orderStats = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic>();
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails> orderProposals = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Get<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails>((a) => a.Item.SKU == item.SKU);
if ((orderProposals?.Count() ?? 0) >= 10) {
}
foreach (var orderProposal in orderProposals ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastDetails>()) {
DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic stat = new DSS2_SynchromodalityCapacityOptimisation.BO.OrderForecastStatistic();
stat.Quantity = (orderProposal?.Quantity ?? 0);stat.RoundQuantity = (orderProposal?.RoundQuantity ?? 0);stat.OrderDate = (orderProposal?.RecommendedOrderDate ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);stat.OrderDateFormatted = (orderProposal?.RecommendedOrderDate?.ToString("MMMM dd, yyyy") ?? "");stat.Item = item;stat.Warehouse = orderProposal?.Warehouse;orderStats?.Add(stat);
}
return orderStats;
}
}



        
	}
}
