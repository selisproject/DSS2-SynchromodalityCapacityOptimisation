
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS2_SynchromodalityCapacityOptimisation.DAL;

namespace DSS2_SynchromodalityCapacityOptimisation.BO
{
	/// <summary>
	/// The OrderGenerator extensions
	/// </summary>
	public static class OrderGeneratorExtensions
	{
        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> GenerateOrders(int? ordersCount){using (new zAppDev.DotNet.Framework.Profiling.Profiler("OrderGenerator", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "GenerateOrders")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.GeoArea> areas = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.GeoArea>();
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse> warehouses = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse>();
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> orders = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().GetAll<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>();
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS> generatedOrders = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>();
int? areasNo = (areas?.Count() ?? 0);
int? ordersNo = (orders?.Count() ?? 0);
int? warehousesNo = (warehouses?.Count() ?? 0);
for (var i = 0; i < ordersCount; i = i + 1) {
int? randomOrderIndex = zAppDev.DotNet.Framework.Utilities.Common.Random.Next(0, (ordersNo).GetValueOrDefault(0));
DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS tempOrder = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromList(orders, randomOrderIndex.GetValueOrDefault(0));
DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS copyOrder = tempOrder?.Copy(false, null,  true);
int? randomAreaIndex = zAppDev.DotNet.Framework.Utilities.Common.Random.Next(0, (areasNo).GetValueOrDefault(0));
DSS2_SynchromodalityCapacityOptimisation.BO.GeoArea selectedGeoArea = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromList(areas, randomAreaIndex.GetValueOrDefault(0));
copyOrder.OrdDlsAddress = "";copyOrder.OrdDlsCity = (selectedGeoArea?.Area ?? "");copyOrder.OrdDlsArea = (selectedGeoArea?.County ?? "");copyOrder.OrdDlsZipCode = (selectedGeoArea?.PostalCode ?? "");int? randomWarehouseIndex = zAppDev.DotNet.Framework.Utilities.Common.Random.Next(0, (warehousesNo).GetValueOrDefault(0));
DSS2_SynchromodalityCapacityOptimisation.BO.Warehouse warehouse = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromList(warehouses, randomWarehouseIndex.GetValueOrDefault(0));
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent> regionalAgents = new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Get<DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent>((ra) => ra.AreaSupport.Contains(selectedGeoArea));
int? randomRAIndex = zAppDev.DotNet.Framework.Utilities.Common.Random.Next(0, (regionalAgents?.Count() ?? 0));
DSS2_SynchromodalityCapacityOptimisation.BO.RegionalAgent regionalAgent = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromList(regionalAgents, randomRAIndex.GetValueOrDefault(0));
copyOrder.OrdAgencyCode = (regionalAgent?.AgencyCode ?? "");copyOrder.OrdAgencyAddress = (regionalAgent?.AgencyAddress ?? "");copyOrder.OrdAgencyDescr = (regionalAgent?.AgencyDescription ?? "");DateTime? now = DateTime.UtcNow;
copyOrder.OrdRegDateTime = now;int? randomDaysAdd = zAppDev.DotNet.Framework.Utilities.Common.Random.Next(1, 100);
copyOrder.OrdDeliveryDateTime = (now?.AddDays((randomDaysAdd).GetValueOrDefault(0)) ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);copyOrder.OrdStatus = 10;generatedOrders?.Add(copyOrder);
new DSS2_SynchromodalityCapacityOptimisation.DAL.Repository().Save<DSS2_SynchromodalityCapacityOptimisation.BO.OrderWMS>(copyOrder);
}
return generatedOrders;
}
}



        
	}
}
