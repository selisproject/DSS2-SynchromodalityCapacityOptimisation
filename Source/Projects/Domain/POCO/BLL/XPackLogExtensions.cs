
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS2_SynchromodalityCapacityOptimisation.DAL;

namespace DSS2_SynchromodalityCapacityOptimisation.BO
{
	/// <summary>
	/// The XPackLog extensions
	/// </summary>
	public static class XPackLogExtensions
	{
        public static System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.XPackLog> Transform(System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.XPackMLRoot> logs){using (new zAppDev.DotNet.Framework.Profiling.Profiler("XPackLog", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "Transform")) {
System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.XPackLog> buckets = new System.Collections.Generic.List<DSS2_SynchromodalityCapacityOptimisation.BO.XPackLog>();
foreach (var bucket in logs ?? Enumerable.Empty<DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.XPackMLRoot>()) {
DSS2_SynchromodalityCapacityOptimisation.BO.XPackLog log = new DSS2_SynchromodalityCapacityOptimisation.BO.XPackLog();
log.InitialRecordScore = bucket.source.initial_record_score;log.Actual = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromArray(bucket.source.actual, 0);log.PartitionFieldValue = bucket.source.partition_field_value;log.Probability = bucket.source.probability;log.RecordScore = bucket.source.record_score;log.Timestamp = bucket.source.timestamp;log.Typical = zAppDev.DotNet.Framework.Utilities.Common.GetItemFromArray(bucket.source.typical, 0);buckets?.Add(log);
}
return buckets;
}
}


public static DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.RecordRequest GetRecordRequest(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("XPackLog", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "GetRecordRequest")) {
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.RecordRequest req = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.RecordRequest();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.QueryOperation query = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.QueryOperation();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.BoolOperation boolOp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.BoolOperation();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.MustOperation mustOp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.MustOperation();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.QueryString queryString = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.QueryString();
queryString.analyze_wildcard = true;queryString.query = "+result_type:\"record\"";mustOp.query_string = queryString;boolOp.must = mustOp;DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Filter filter = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Filter();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Range range = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Range();
DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Timestamp timestamp = new DSS2_SynchromodalityCapacityOptimisation.ExternalStructs.XPackML.Timestamp();
timestamp.gte = "now-1y";timestamp.lte = "now";range.timestamp = timestamp;filter.range = range;boolOp.filter = filter;query.Bool = boolOp;req.query = query;return req;
}
}



        
	}
}
