<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DSS2_SynchromodalityCapacityOptimisation.Backend" namespace="DSS2_SynchromodalityCapacityOptimisation.BO">
    <class name="ShippingOrder" table="`ShippingOrders`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">ShippingOrders</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="DepartureDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`DepartureDate`" sql-type="datetime" />
        </property>
        <property name="ArrivalDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`ArrivalDate`" sql-type="datetime" />
        </property>
        <property name="Shipper" column="`Shipper`" type="String" not-null="false" length="100" />
        <property name="Carrier" column="`Carrier`" type="String" not-null="false" length="100" />
        <property name="ItemDescription" column="`ItemDescription`" type="String" not-null="false" length="100" />
        <property name="Conditions" column="`Conditions`" type="String" not-null="false" length="100" />
        <property name="AggregateVolume" column="`AggregateVolume`" type="System.Nullable`1[[System.Decimal, mscorlib]], mscorlib" not-null="false" precision="8" scale="2" />
        <property name="Priority" column="`Priority`" type="System.Nullable`1[[System.Int32, mscorlib]], mscorlib" not-null="false" />
        <bag batch-size="100" name="Shipment" table="`ShippingOrders_To_Shipments`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update" inverse="true">
            <cache usage="read-write" />
            <key column="`ShippingOrders`" foreign-key="FK_ShippingOrders_To_Shipments_On_Shipment" />
            <many-to-many class="Shipment" column="`Shipment`" />
        </bag>
        <many-to-one name="DeparturePoint" access="field.camelcase" class="Location" column="`DeparturePoint`" cascade="persist,merge,save-update" foreign-key="FK_ShippingOrders_To_Locations_On_DeparturePoint" />
        <many-to-one name="ArrivalPoint" access="field.camelcase" class="Location" column="`ArrivalPoint`" cascade="persist,merge,save-update" foreign-key="FK_ShippingOrders_To_Locations_On_ArrivalPoint" />
        <bag batch-size="100" name="StatusEvolution" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`ShippingOrder_StatusEvolution`" foreign-key="FK_ShippingOrders_To_StatusEvolutions_On_StatusEvolution" />
            <one-to-many class="StatusEvolution" />
        </bag>
        <many-to-one name="Parent" access="field.camelcase" class="ShippingOrder" column="`Parent`" cascade="persist,merge,save-update" foreign-key="FK_ShippingOrders_To_ShippingOrders_On_Parent" />
        <bag batch-size="100" name="PlannedVolume" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`ShippingOrder_PlannedVolume`" foreign-key="FK_ShippingOrders_To_CustomVolumes_On_PlannedVolume" />
            <one-to-many class="CustomVolume" />
        </bag>
        <bag batch-size="100" name="ActualVolume" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`ShippingOrder_ActualVolume`" foreign-key="FK_ShippingOrders_To_CustomVolumes_On_ActualVolume" />
            <one-to-many class="CustomVolume" />
        </bag>
        <many-to-one name="ItemType" access="field.camelcase" class="ItemType" column="`ItemType`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_ShippingOrders_To_ItemTypes_On_ItemType" />
    </class>
</hibernate-mapping>