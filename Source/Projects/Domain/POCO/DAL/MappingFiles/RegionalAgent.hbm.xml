<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DSS2_SynchromodalityCapacityOptimisation.Backend" namespace="DSS2_SynchromodalityCapacityOptimisation.BO">
    <class name="RegionalAgent" table="`RegionalAgents`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">RegionalAgents</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="AgencyCode" column="`AgencyCode`" type="String" not-null="false" length="40" />
        <property name="AgencyDescription" column="`AgencyDescription`" type="String" not-null="false" length="200" />
        <property name="AgencyAddress" column="`AgencyAddress`" type="String" not-null="false" length="500" />
        <property name="IsSelected" column="`IsSelected`" type="System.Boolean" not-null="false" />
        <property name="Rating" column="`Rating`" type="System.Nullable`1[[System.Int32, mscorlib]], mscorlib" not-null="false" />
        <bag batch-size="100" name="WarehousesSupport" table="`RegionalAgents_To_Warehouses`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update" inverse="true">
            <cache usage="read-write" />
            <key column="`RegionalAgentsService`" foreign-key="FK_RegionalAgents_To_Warehouses_On_WarehousesSupport" />
            <many-to-many class="Warehouse" column="`WarehousesSupport`" />
        </bag>
        <bag batch-size="100" name="RAUsers" access="field.camelcase" inverse="true" cascade="all">
            <cache usage="read-write" />
            <key column="`RegionalAgent`" foreign-key="FK_RegionalAgents_To_RegionalAgentUsers_On_RAUsers" />
            <one-to-many class="RegionalAgentUser" />
        </bag>
        <many-to-one name="AddressCoordinates" access="field.camelcase" class="GeoCoordinates" column="`AddressCoordinates`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_RegionalAgents_To_GeoCoordinatesTbl_On_AddressCoordinates" />
        <bag batch-size="100" name="AreaSupport" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`RegionalAgent_AreaSupport`" foreign-key="FK_RegionalAgents_To_GeoAreas_On_AreaSupport" />
            <one-to-many class="GeoArea" />
        </bag>
        <bag batch-size="100" name="Trucks" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`RegionalAgent`" foreign-key="FK_RegionalAgents_To_Trucks_On_Trucks" />
            <one-to-many class="Truck" />
        </bag>
        <bag batch-size="100" name="ScheduledRouteTemplates" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Owner`" foreign-key="FK_RegionalAgents_To_ScheduledRouteTemplates_On_ScheduledRouteTemplates" />
            <one-to-many class="ScheduledRouteTemplate" />
        </bag>
        <bag batch-size="100" name="WorkContract" access="field.camelcase" inverse="true" cascade="persist,merge,all-delete-orphan">
            <cache usage="read-write" />
            <key column="`RegionalAgent`" foreign-key="FK_RegionalAgents_To_WorkContracts_On_WorkContract" />
            <one-to-many class="WorkContract" />
        </bag>
    </class>
</hibernate-mapping>