<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DSS2_SynchromodalityCapacityOptimisation.Backend" namespace="DSS2_SynchromodalityCapacityOptimisation.BO">
    <class name="Agreement" table="`Agreements`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">Agreements</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="Byte[]" generated="always">
            <column name="`VersionTimestamp`" not-null="false" sql-type="timestamp" />
        </version>
        <property name="FullTruckLoad" column="`FullTruckLoad`" type="System.Boolean" not-null="false" />
        <property name="AgreementDocument" column="`AgreementDocument`" type="String" not-null="false" length="4001" />
        <property name="LeadTime" column="`LeadTime`" type="String" not-null="false" length="100" />
        <property name="DateCreated" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`DateCreated`" sql-type="datetime" />
        </property>
        <property name="WDDeliveries" column="`WDDeliveries`" type="System.Boolean" not-null="false" />
        <property name="TargetInventoryDays" column="`TargetInventoryDays`" type="System.Nullable`1[[System.Int32, mscorlib]], mscorlib" not-null="false" />
        <property name="Profile" column="`Profile`" type="String" not-null="false" length="100" />
        <bag batch-size="100" name="AgreementStatuses" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreement_AgreementStatuses`" foreign-key="FK_Agreements_To_AgreementStatuses_On_AgreementStatuses" />
            <one-to-many class="AgreementStatus" />
        </bag>
        <bag batch-size="100" name="Items" table="`Items_To_Agreements`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreements`" foreign-key="FK_Agreements_To_Items_On_Items" />
            <many-to-many class="Item" column="`Items`" />
        </bag>
        <many-to-one name="Supplier" access="field.camelcase" class="Supplier" column="`Supplier`" cascade="persist,merge,save-update" foreign-key="FK_Agreements_To_Suppliers_On_Supplier" />
        <bag batch-size="100" name="Warehouses" table="`Warehouses_To_Agreements`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreements_Warehouses`" foreign-key="FK_Agreements_To_Warehouses_On_Warehouses" />
            <many-to-many class="Warehouse" column="`Warehouses`" />
        </bag>
        <bag batch-size="100" name="StockOnHands" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreement`" foreign-key="FK_Agreements_To_StockOnHands_On_StockOnHands" />
            <one-to-many class="StockOnHand" />
        </bag>
        <bag batch-size="100" name="TransportUnCaps" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Agreement_TransportUnCaps`" foreign-key="FK_Agreements_To_TransportUnCaps_On_TransportUnCaps" />
            <one-to-many class="TransportUnCap" />
        </bag>
    </class>
</hibernate-mapping>