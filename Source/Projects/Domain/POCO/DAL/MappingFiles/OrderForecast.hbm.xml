<?xml version="1.0" encoding="utf-8"?>
<!--Copyright (c) CLMS. All rights reserved.-->
<!--Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.-->
<!-- This source file was autogenerated by zAppDev(r). -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DSS2_SynchromodalityCapacityOptimisation.Backend" namespace="DSS2_SynchromodalityCapacityOptimisation.BO">
    <class name="OrderForecast" table="`OrderForecasts`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">OrderForecasts</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <property name="ImportId" column="`ImportId`" type="System.Nullable`1[[System.Int32, mscorlib]], mscorlib" not-null="false" />
        <property name="Status" column="`Status`" type="String" not-null="false" length="100" />
        <property name="CreatedBy" column="`CreatedBy`" type="String" not-null="false" length="100" />
        <property name="CreatedOn" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`CreatedOn`" sql-type="datetime" />
        </property>
        <property name="StartDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`StartDate`" sql-type="datetime" />
        </property>
        <property name="EndDate" type="System.Nullable`1[[System.DateTime, mscorlib]], mscorlib" not-null="false">
            <column name="`EndDate`" sql-type="datetime" />
        </property>
        <property name="State" column="`State`" type="String" not-null="false" length="100" />
        <bag batch-size="100" name="OrderForecastDetails" access="field.camelcase" inverse="true" cascade="all">
            <cache usage="read-write" />
            <key column="`OrderForecast`" foreign-key="FK_OrderForecasts_To_OrderForecastDetailsTbl_On_OrderForecastDetails" />
            <one-to-many class="OrderForecastDetails" />
        </bag>
        <many-to-one name="SalesForecast" access="field.camelcase" class="SalesForecast" column="`SalesForecast`" cascade="persist,merge,save-update" foreign-key="FK_OrderForecasts_To_SalesForecasts_On_SalesForecast" />
        <bag batch-size="100" name="SupplierParameters" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`OrderForecast`" foreign-key="FK_OrderForecasts_To_SupplierParameters_On_SupplierParameters" />
            <one-to-many class="SupplierParameter" />
        </bag>
        <bag batch-size="100" name="ItemParameters" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`OrderForecast_ItemParameters`" foreign-key="FK_OrderForecasts_To_ItemParameters_On_ItemParameters" />
            <one-to-many class="ItemParameter" />
        </bag>
    </class>
</hibernate-mapping>