// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using NHibernate;
using NHibernate.Context;
using NHibernate.Tool.hbm2ddl;

namespace DSS2_SynchromodalityCapacityOptimisation.BoTesting.Tests.Common
{
    internal class NHibernateFixture : BaseFixture
    {
        protected ISessionFactory SessionFactory => NHConfigurator.SessionFactory;

        protected ISession Session => SessionFactory.GetCurrentSession();

        protected override void OnFixtureSetup()
        {
            SetupNHibernateSession();
            base.OnSetup();
        }
        protected override void OnFixtureTeardown()
        {
            TearDownNHibernateSession();
            base.OnTeardown();
        }
        protected void SetupNHibernateSession()
        {
            TestConnectionProvider.CloseDatabase();
            SetupContextualSession();
            BuildSchema();
        }
        protected void TearDownNHibernateSession()
        {
            TearDownContextualSession();
            TestConnectionProvider.CloseDatabase();
        }
        private void SetupContextualSession()
        {
            var session = SessionFactory.OpenSession();
            CurrentSessionContext.Bind(session);
        }
        private void TearDownContextualSession()
        {
            var sessionFactory = NHConfigurator.SessionFactory;
            var session = CurrentSessionContext.Unbind(sessionFactory);
            session.Close();
        }
        private void BuildSchema()
        {
            var cfg = NHConfigurator.Configuration;
            var schemaExport = new SchemaExport(cfg);
            schemaExport.Create(false, true);
        }
    }
}
