// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS2_SynchromodalityCapacityOptimisation.ViewModels.UserPreferences {
export class UserPreferencesViewModel extends DSS2_SynchromodalityCapacityOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
ApplicationUser:
                true
            }
        } else {
            this._members["ApplicationUser"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ApplicationUser != null)
            instance.ApplicationUser = ApplicationUser_ApplicationUserViewModel._lightCast(instance.ApplicationUser);
        return instance;
    }

    public static _initializeFrom(original: UserPreferencesViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): UserPreferencesViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        UserPreferencesViewModel = new UserPreferencesViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateUserPreferencesViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateUserPreferencesViewModel(original: UserPreferencesViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.ApplicationUser !== undefined) this.ApplicationUser = ApplicationUser_ApplicationUserViewModel._initializeFrom(original.ApplicationUser, ignoreReadOnlyProperties, context);
        if (original.LanguageBox__InitialSelection !== undefined) this.LanguageBox__InitialSelection = original.LanguageBox__InitialSelection;
        if (original.LocaleBox__InitialSelection !== undefined) this.LocaleBox__InitialSelection = original.LocaleBox__InitialSelection;
        if (original.DropdownApplicationThemeDataSet__InitialSelection !== undefined) this.DropdownApplicationThemeDataSet__InitialSelection = original.DropdownApplicationThemeDataSet__InitialSelection;
        this.LanguageBoxSelectedItemKeys = original.LanguageBoxSelectedItemKeys;
        this.LocaleBoxSelectedItemKeys = original.LocaleBoxSelectedItemKeys;
        this.DropdownApplicationThemeDataSetSelectedItemKeys = original.DropdownApplicationThemeDataSetSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = UserPreferencesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            UserPreferencesViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): UserPreferencesViewModel {
        var reduced = UserPreferencesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        UserPreferencesViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: UserPreferencesViewModel) {
        if (reduced == null) return;

        delete reduced.LanguageBox__InitialSelection;
        delete reduced.LocaleBox__InitialSelection;
        delete reduced.DropdownApplicationThemeDataSet__InitialSelection;

        DSS2_SynchromodalityCapacityOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public ApplicationUser:
    any;
public LanguageBox__InitialSelection:
    any;
public LocaleBox__InitialSelection:
    any;
public DropdownApplicationThemeDataSet__InitialSelection:
    any;
public LanguageBoxSelectedItemKeys:
    any[];
public LocaleBoxSelectedItemKeys:
    any[];
public DropdownApplicationThemeDataSetSelectedItemKeys:
    any[];
}

export class ApplicationUser_ApplicationUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
true,Profile:
                true
            }
        } else {
            this._members["UserName"] = true;
            this._members["Profile"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Profile != null)
            instance.Profile = ApplicationUser_ApplicationUser_Profile_ProfileViewModel._lightCast(instance.Profile);
        return instance;
    }

    public static _initializeFrom(original: ApplicationUser_ApplicationUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ApplicationUser_ApplicationUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ApplicationUser_ApplicationUserViewModel = new ApplicationUser_ApplicationUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateApplicationUser_ApplicationUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateApplicationUser_ApplicationUserViewModel(original: ApplicationUser_ApplicationUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        if(original.Profile !== undefined) this.Profile = ApplicationUser_ApplicationUser_Profile_ProfileViewModel._initializeFrom(original.Profile, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ApplicationUser_ApplicationUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ApplicationUser_ApplicationUserViewModel {
        var reduced = ApplicationUser_ApplicationUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
public Profile:
    any;
    public _versionTimestamp?: string;
}

export class ApplicationUser_ApplicationUser_Profile_ProfileViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,LanguageLCID:
true,LocaleLCID:
true,Theme:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["LanguageLCID"] = true;
            this._members["LocaleLCID"] = true;
            this._members["Theme"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: ApplicationUser_ApplicationUser_Profile_ProfileViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ApplicationUser_ApplicationUser_Profile_ProfileViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ApplicationUser_ApplicationUser_Profile_ProfileViewModel = new ApplicationUser_ApplicationUser_Profile_ProfileViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateApplicationUser_ApplicationUser_Profile_ProfileViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateApplicationUser_ApplicationUser_Profile_ProfileViewModel(original: ApplicationUser_ApplicationUser_Profile_ProfileViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.LanguageLCID !== undefined) this.LanguageLCID = original.LanguageLCID;
        if(original.LocaleLCID !== undefined) this.LocaleLCID = original.LocaleLCID;
        if(original.Theme !== undefined) this.Theme = original.Theme;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ApplicationUser_ApplicationUser_Profile_ProfileViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ApplicationUser_ApplicationUser_Profile_ProfileViewModel {
        var reduced = ApplicationUser_ApplicationUser_Profile_ProfileViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public LanguageLCID:
    any;
public LocaleLCID:
    any;
public Theme:
    any;
    public _versionTimestamp?: string;
}

}
