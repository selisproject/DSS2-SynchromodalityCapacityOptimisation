// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS2_SynchromodalityCapacityOptimisation.Services {
/**
 * Client for 'DataSeed' Service
 */
export class DataSeedServiceClient {

    /**
     * Base url for 'DataSeed' Service
     */
    static baseUrl = "/api/DataSeed/";

    /**
    * test notes
    */
    public static Orders(orders?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = orders;
                return axios.post(window._context.siteRoot + DataSeedServiceClient.baseUrl + "Orders",_data);
            }
            /**
            *
            */
            public static InitRegionalAgents(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "InitRegionalAgents",_data);
            }
            /**
            *
            */
            public static Change(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "change",_data);
            }
            /**
            *
            */
            public static TestGoogleAPI(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "googleAPI",_data);
            }
            /**
            *
            */
            public static initWarehouse(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "warehouse",_data);
            }
            /**
            *
            */
            public static testOrderGenerator(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "testordergenerator",_data);
            }
            /**
            *
            */
            public static testReflection(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "testreflection",_data);
            }
            /**
            *
            */
            public static TruckPosistions(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + DataSeedServiceClient.baseUrl + "TruckPosistions",_data);
            }

}
}

// Create service shortcut
if (window.$api == null) {
    window.$api = {};
}

window.$api.DataSeed = DSS2_SynchromodalityCapacityOptimisation.Services.DataSeedServiceClient;
