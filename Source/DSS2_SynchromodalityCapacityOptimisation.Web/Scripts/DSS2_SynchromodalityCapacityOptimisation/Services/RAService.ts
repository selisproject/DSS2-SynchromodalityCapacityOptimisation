// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS2_SynchromodalityCapacityOptimisation.Services {
/**
 * Client for 'RA' Service
 */
export class RAServiceClient {

    /**
     * Base url for 'RA' Service
     */
    static baseUrl = "/api/RA/";

    /**
    *
    */
    public static GetRA(raname?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: { raname: raname } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetRA",_data);
            }
            /**
            *
            */
            public static GetOrderWMS(id?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: { id: id } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetOrderWMS",_data);
            }
            /**
            *
            */
            public static SaveOrder(order?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = order;
                return axios.post(window._context.siteRoot + RAServiceClient.baseUrl + "SaveOrder",_data);
            }
            /**
            *
            */
            public static GetTruckDriver(username?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: { username: username } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetTruckDriver",_data);
            }
            /**
            *
            */
            public static GetAllOrderWMS(): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: {  } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetAllOrderWMS",_data);
            }
            /**
            *
            */
            public static GetOrderByTruck(plateNumber?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: { plateNumber: plateNumber } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetOrderByTruck",_data);
            }
            /**
            *
            */
            public static GetOrderByAgency(agencyCode?:any): Axios.IPromise<Axios.AxiosXHR<any>> {
                const _data = { params: { agencyCode: agencyCode } };
                return axios.get(window._context.siteRoot + RAServiceClient.baseUrl + "GetOrderByAgency",_data);
            }

}
}

// Create service shortcut
if (window.$api == null) {
    window.$api = {};
}

window.$api.RA = DSS2_SynchromodalityCapacityOptimisation.Services.RAServiceClient;
