declare namespace Joove {
    class ResourcesManager {
        resources: any;
        partialViewResources: any;
        constructor();
        init(): void;
        prepareXmlString(str: string): string;
        getResource(key: string, resourceOwner?: any): string;
        getGlobalResource(key: string): string;
        getLocalResource(key: string, fromMaster?: boolean, partialViewName?: string): string;
        getPageTitle(): string;
        getListResources(): {
            NextPage: string;
            PreviousPage: string;
            Ok: string;
            Cancel: string;
            AddFilter: string;
            FiltersPopUpTitle: string;
            NoFiltersDefined: string;
            Column: string;
            Operator: string;
            Criteria: string;
            RowOperator: string;
            Or: string;
            And: string;
            Range: string;
            EqualTo: string;
            Like: string;
            NotEqualTo: string;
            GreaterThan: string;
            GreaterThanOrEqualTo: string;
            LessThan: string;
            LessThanOrEqualTo: string;
            Order: string;
            Visible: string;
            Sorting: string;
            SortOrder: string;
            PreferencesPopUpTitle: string;
            Rearrange: string;
            Search: string;
            ShowQuickFilters: string;
            HideQuickFilters: string;
            Of: string;
            Items: string;
            PerPage: string;
            Pages: string;
            PredefinedView: string;
            ResetTooltip: string;
            ResetConfirmation: string;
            RefreshTooltip: string;
            PreferencesTooltip: string;
            FiltersTooltip: string;
            SaveCurrentView: string;
            OverwriteCurrentView: string;
            DeleteCurrentView: string;
            DeleteCurrentViewCommand: string;
            DeleteCurrentViewConfirmation: string;
            SaveCurrentViewNameAlert: string;
            ViewName: string;
            IsDefault: string;
            MakeDefault: string;
            MakeDefaultConfirmation: string;
            PrevPageTooltip: string;
            NextPageTooltip: string;
            NoResults: string;
            Ascending: string;
            Descending: string;
            FiltersApplied: string;
            GrandTotal: string;
            PageTotal: string;
            GrandAverage: string;
            PageAverage: string;
            GrandCount: string;
            PageCount: string;
            GroupingOrder: string;
            Page: string;
            Export: string;
            MoveColumnLeft: string;
            MoveColumnRight: string;
            SortASC: string;
            SortDESC: string;
            Unsort: string;
            FirstPageTooltip: string;
            LastPageTooltip: string;
            HasNoValue: string;
            HasValue: string;
            CalculateCount: string;
            CalculateSum: string;
            CalculateAverage: string;
            CommonActions: string;
            True: string;
            False: string;
            Apply: string;
            ClearAll: string;
            ApplyQuickFilter: string;
            ClearQuickFilter: string;
            ExportType: string;
            ExportRange: string;
            ExportRangeCurrent: string;
            ExportRange100: string;
            ExportRangeAll: string;
            ExportOnlyGroups: string;
            RequiredFiltersMissingMessage: string;
            RequiredFiltersMissingTitle: string;
            SubGroups: string;
            VisibleExport: string;
            ColumnExport: string;
            SumHeader: string;
            AverageHeader: string;
            PortraitOrientation: string;
            IncludeGridLines: string;
            FileName: string;
            DisplayColumns: string;
            HeaderColor: string;
            OddColor: string;
            EvenColor: string;
            GroupColor: string;
            AggregateColor: string;
            CountHeader: string;
            TotalNonGroupCount: string;
            GetGroupsClosed: string;
            PrevStateTooltip: string;
            DisplayGroupItems: string;
            ClearAggregators: string;
            DownloadCsv: string;
            UploadCsv: string;
            Import: string;
            PreferedEncoding: string;
            ImportResults: string;
            ImportedRecords: string;
            FailedRecords: string;
            ErrorDetails: string;
            RowNumber: string;
            ErrorDescription: string;
            ErrorMessage: string;
            SelectAllRecordsPromptText: string;
            SelectAllPageRecordsText: string;
            DeselectAllRecordsPromptText: string;
            DeselectAllPageRecordsText: string;
        };
        getDataListResources(): {
            Ok: string;
            Cancel: string;
            ClearAll: string;
            RequiredFiltersMissingMessage: string;
            AddFilter: string;
            FiltersPopUpTitle: string;
            Operator: string;
            Criteria: string;
            RowOperator: string;
            Or: string;
            And: string;
            HasNoValue: string;
            HasValue: string;
            Range: string;
            EqualTo: string;
            Like: string;
            NotEqualTo: string;
            GreaterThan: string;
            GreaterThanOrEqualTo: string;
            LessThan: string;
            LessThanOrEqualTo: string;
            CountHeader: string;
            VisibleExport: string;
            ColumnExport: string;
            SumHeader: string;
            AverageHeader: string;
            Export: string;
            HeaderColor: string;
            OddColor: string;
            EvenColor: string;
            GroupColor: string;
            AggregateColor: string;
            DisplayColumns: string;
            TotalNonGroupCount: string;
            Search: string;
            PortraitOrientation: string;
            IncludeGridLines: string;
            FileName: string;
            NoResults: string;
            Info: string;
            PageSize: string;
            Records: string;
            Refresh: string;
            Reset: string;
            All: string;
            Loading: string;
            Processing: string;
            First: string;
            Last: string;
            Next: string;
            Previous: string;
            True: string;
            False: string;
            CalculateCount: string;
            CalculateSum: string;
            CalculateAverage: string;
            ColumnVisibility: string;
            Copy: string;
            CopyTitle: string;
            CopySuccessSingle: string;
            CopySuccessMulti: string;
            GrandTotal: string;
            PageTotal: string;
            GrandAverage: string;
            PageAverage: string;
            GrandCount: string;
            PageCount: string;
            SelectAllRecordsText: string;
            DeselectAllRecordsText: string;
            SelectAllPageRecordsText: string;
            DeselectAllPageRecordsText: string;
            ExportType: string;
            ExportRange: string;
            ExportRangeCurrent: string;
            ExportRange100: string;
            ExportRangeAll: string;
            ExportOnlyGroups: string;
            OneRowSelected: string;
            MulitpleRowsSelected: string;
            DialogOkButton: string;
            DialogCancelButton: string;
            Grouping: string;
            Column: string;
            GroupingOrder: string;
            GetGroupsClosed: string;
            MergedGroupLevels: string;
            ViewName: string;
            View: string;
            Views: string;
            DeleteView: string;
            SaveView: string;
            InvalidViewName: string;
            IsViewDefault: string;
            DeleteConfirmation: string;
            ActiveView: string;
            Import: string;
            ImportDownload: string;
            ImportUpload: string;
            ImportEncoding: string;
            ImportResult: string;
            ImportSuccess: string;
            ImportError: string;
            ImportErrorList: string;
            ClearSearch: string;
            QuickFilters: string;
            Actions: string;
            SelectionActions: string;
            MaxSelectedRowsLimitationTitle: string;
            MaxSelectedRowsLimitationMessage: string;
            ExportTitle: string;
        };
        getFilterWidgetResource(): Widgets.IFilterDatasourceWidgetResource;
        getChartResources(): Widgets.IChartResource;
        getComboBoxDefaultText($element: JQuery, fromMaster: boolean): string;
        getEmptyRequiredFieldMessage(controlName: string, fromMaster: boolean, partialViewName?: string): string;
        getComboBoxManualValueDisplay(dataSetName: string, value: string, fromMaster: boolean, partialViewName: string): string;
        getRadioButtonManualValueDisplay(dataSetName: string, value: string, fromMaster: boolean, partialViewName: string): string;
        getComboBoxNoDataText($element: JQuery, fromMaster: boolean): string;
        getDataListColumnCaption(elementId: string, columnName: string, isPickList?: boolean, fromMaster?: boolean): string;
        getListColumnCaption($element: JQuery, columnName: string, isPickList: boolean, fromMaster?: boolean): string;
        getPickListModalTitle($element: JQuery, fromMaster: boolean): string;
        getDefaultOkText(): string;
        getDefaultCancelText(): string;
        getNullValueText(): string;
        getRequiredFieldsMissingText(): string;
        getInvalidBindingFieldsText(): string;
        getItemsRequireAttentionText(): string;
        getFileUploadTitle(): string;
        getImageUploadTitle(): string;
        getFileUploadSuccess(): string;
        getFileUploadLoading(): string;
        getFileUploadError(): string;
        getFileNotFound(): string;
        getLoadingMessage(): string;
        getButtonConfirmation(btnName: string, fromMaster: boolean, partialViewName?: string): string;
        getEventConfirmation(controlName: string, fromMaster: boolean, partialViewName?: string): string;
        getPopupBlockedTitle(): string;
        getPopupBlockedMessage(): string;
        getPicklistClearConfirmation(): string;
        getSesionExpiredMessage(): string;
        getSesionAboutToExpireMessage(): string;
        getSesionRefreshedMessage(): string;
        getTooLargeFileMessage(file: string, size: number, maxAllowed: number): string;
    }
}
