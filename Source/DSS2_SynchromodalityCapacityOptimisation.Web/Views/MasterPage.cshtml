@*Copyright (c) CLMS. All rights reserved.
Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
This source file was autogenerated by zAppDev(r).*@
@using System.Web.Optimization
@using zAppDev.DotNet.Framework.Mvc.UI.Helper
@{ Layout = null; }
<!DOCTYPE html>
<html>
@{ Init("MasterPage"); }
<head><title>@(GetGlobalResource("RES_SITE_ApplicationTitle"))</title>
<style>
                .hidden-before-rule-apply { display: none; }
                *::-ms-clear { display: none !important; width: 0 !important; height:0 !important; }
            </style>
@if (zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentProfileTheme().ToString() == "LiteTheme")
{
<link rel="stylesheet" type="text/css" href="@GetThemeMainStyle("~/Themes/LiteTheme/LiteTheme_Generated")"jb-theme-import>
}
@if (zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentProfileTheme().ToString() == "LiteTheme")
{
<link rel="stylesheet" type="text/css" href="@GetContentWithVersion("~/Themes/LiteTheme/css/bootstrap.min.css")" jb-theme-import><link rel="stylesheet" type="text/css" href="@GetContentWithVersion("~/Themes/LiteTheme/themeicons/style.css")" jb-theme-import><link rel="stylesheet" type="text/css" href="@GetContentWithVersion("~/Themes/LiteTheme/MasterPageSingIn.css")" jb-theme-import>
}

<script src="@GetContentWithVersion("~/Scripts/Third-Party/jquery-1.9.1.min.js")"></script>
@Scripts.Render("~/bundle/scripts/dependencies")
@Scripts.Render("~/bundle/scripts/clms-framework")
@if (ZipRequests) 
            {
            <script src="@GetContentWithVersion("~/Scripts/Third-Party/jszip.min.js")"></script>
            }
@if (zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentProfileTheme().ToString() == "LiteTheme")
{
<script src="@GetContentWithVersion("~/Scripts/Themes/LiteTheme.js")" jb-theme-import></script>
}

@Scripts.Render("~/bundle/scripts/MasterPage")

@Styles.Render("~/bundle/styles/MasterPage")

<script>
@{var currentLocale = zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentLocale();}
@{var currentLanguage = zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentLanguage();}
 var modules = Joove.ClmsAngular.getUsedAngularModules(['Ul','Repeater','NemoAce', 'jsonFormatter']);
                    var $app = angular.module('Application', modules);
                    var _commander = new Joove.ClientCommander();
                    var _appVersion = "@AppVersion";
                    var _ruleEngine = new Joove.RuleEngine();
                    var _popUpManager = new Joove.PopUpManager();
                    var _validationPanel = new Joove.Widgets.ValidationPanelAngular();
                    var _scriptLoader = new Joove.ScriptLoaderManager();
                    var _resourcesManager = new Joove.ResourcesManager();
                    var _historyManager = new Joove.HistoryManager();
                    var _recorder = new Joove.Recorder();
                    var _antiForgeryKey = '@(GetTokenHeaderValue())';
                    var _themeManager = new Joove.ThemeManager(_theme@(zAppDev.DotNet.Framework.Identity.ProfileHelper.GetCurrentProfileTheme()));
                    var _sanitizationDic = [@Html.Raw(string.Join(", ", zAppDev.DotNet.Framework.Utilities.Web.SerializationSanitizationEntries.Select(x => "{'what': '" + x.Key + "', 'with': '" + x.Value + "'}")))];
                    var _backEndInfoAggregator = new Joove.BackEndInformationAggregator("Render");
                    var _debugConsoleManager = new Joove.DebugConsoleManager();
                    
                    var _context = {
                       sessionTimeOutMins: 20,
                       appName: "DSS2_SynchromodalityCapacityOptimisation",
                       ajaxContentType: "application/x-www-form-urlencoded",
                       mode: "Development",
                       isDirty: false,                       
                       adminCanSetPasswords: @zAppDev.DotNet.Framework.Identity.IdentityHelper.AdminCanResetPassword.ToString().ToLowerInvariant(),
                       siteRoot: '@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~"))',
                       currentAction: '@ViewContext.RouteData.Values["action"]',
                       currentController: '@ViewContext.RouteData.Values["controller"]',
                       currentMasterPageController: 'MasterPage',
                       currentUsername: '@zAppDev.DotNet.Framework.Identity.IdentityHelper.GetCurrentUserName().ToSanitizedJs()',
                       currentUserRoles: [@Html.Raw(string.Join(", ",zAppDev.DotNet.Framework.Identity.IdentityHelper.GetCurrentApplicationUserRoles().Select(x => "'" + x.ToSanitizedJs() + "'")))],
                       currentUserPermissions: [@Html.Raw(string.Join(", ", zAppDev.DotNet.Framework.Identity.IdentityHelper.GetCurrentApplicationUserPermissions().Select(x => "'" + x.ToSanitizedJs() + "'")))],
                       currentUser: JSON.parse('@Html.Raw(@zAppDev.DotNet.Framework.Identity.IdentityHelper.GetUserProfile().ToSanitizedJs(false))'),
                       isModal: window.self !== window.top,
                       locale: '@currentLocale.Code.ToXssSafeString()',
                       localeId: '@currentLocale.Id.ToXssSafeString()',
                       localeName: '@currentLocale.Name.ToXssSafeString()',
                       language: '@currentLanguage.Code.ToXssSafeString()',
                       languageId: '@currentLanguage.Id.ToXssSafeString()',
                       languageName: '@currentLanguage.Name.ToXssSafeString()',
                       monthDayPattern: '@currentLocale.DateTimeFormat.MonthDayPattern.ToXssSafeString()',                       
                       RFC1123Pattern: '@currentLocale.DateTimeFormat.RFC1123Pattern.ToXssSafeString()',
                       yearMonthPattern: '@currentLocale.DateTimeFormat.YearMonthPattern.ToXssSafeString()',                       
                       longDatePattern: '@currentLocale.DateTimeFormat.LongDatePattern.ToXssSafeString()',
                       shortDatePattern: '@currentLocale.DateTimeFormat.ShortDatePattern.ToXssSafeString()',
                       longTimePattern: '@currentLocale.DateTimeFormat.LongTimePattern.ToXssSafeString()',
                       shortTimePattern: '@currentLocale.DateTimeFormat.ShortTimePattern.ToXssSafeString()',                       
                       decimalSeparator: '@Html.Raw(@zAppDev.DotNet.Framework.Identity.ProfileHelper.GetLocaleDecimalSeparator().ToSanitizedJs())',
                       groupSeparator: '@Html.Raw(@zAppDev.DotNet.Framework.Identity.ProfileHelper.GetLocaleNumberGroupSeparator().ToSanitizedJs())',
                       currentVersion: '@AppVersion.ToXssSafeString()',
                       urlQuery: '@Html.Raw(zAppDev.DotNet.Framework.Utilities.Web.GetQuery().ToXssSafeString())',
                       zipRequests: @ZipRequests.ToString().ToLower(),
                       routeData: [@Html.Raw(string.Join(", ", @zAppDev.DotNet.Framework.Mvc.UI.Helper.Routes.GetRouteData().Select(x => "{'key': '" + x.Key.ToXssSafeString() + "', 'value': '" + x.Value.ToXssSafeString() + "'}")))]
                    };
Joove.DatasourceManager.makeAsyncRequests = true;
</script>

<meta name="viewport" content="width=device-width, initial-scale=1">



@Scripts.Render("~/bundle/scripts/MasterPageAfterInit")

@RenderSection("Inlcudes", false)
@RenderSection("Scripts", false)
@RenderSection("Styles", false)
</head>
<body jb-id='Body' jb-type='Body' onload="Joove.Widgets.MenuControl.PreInit()" class="hfill-body jb-control " style="display: none; "><form id="navigationForm"></form>
<div class="form-root-element" 
                                   ng-controller="MasterPageController" 
                                   ng-app="Application" 
                                   ng-model-options="{updateOn:'blur'}">
<div ng-if="_ready === true">
<div jb-id='MenuBar' jb-type='MenuControl' class="MenuBar navbar navbar-default navbar-fixed-top jb-control " ><div class="navbar-header">
<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-responsive-collapse"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button>
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "HomePage", "Render")) {
<div jb-id='MainMenuHeader' jb-type='MenuItem' class="jb-control jb-direct-link jb-menu-header"   ng-click="eventCallbacks.MainMenuHeaderMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="navbar-brand jb-control" ><span jb-type='MenuItemIcon' class="jb-control jb-no-icon" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetGlobalResource("RES_SITE_ApplicationTitle").ToXssSafeString())</span>
</a>
</div>
}
</div>
<div class="navbar-collapse collapse navbar-responsive-collapse">
<ul class="nav navbar-nav">
</ul>
<ul class="nav navbar-nav navbar-right">
<li jb-id='MasterAdministrationRoot' jb-type='MenuItem' class="navbar-right menu-root jb-control jb-submenu jb-menu-right" ><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="jb-control jb-no-icon" ></span>
<span jb-type='MenuItemLabel' class="dropdown-toggle jb-control" >@(zAppDev.DotNet.Framework.Identity.IdentityHelper.GetCurrentUserName().ToXssSafeString())</span>
<span jb-type='MenuItemArrow' class="caret jb-control" ></span>
</a>
<ul jb-type='MenuItemsContainer' class="dropdown-menu jb-control" ><li jb-id='MasterAdministration' jb-type='MenuItem' class="jb-control jb-submenu" ><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-folder-open jb-control" ></span>
<span jb-type='MenuItemLabel' class="dropdown-toggle jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_MasterAdministration").ToXssSafeString())</span>
<span jb-type='MenuItemArrow' class="hasIcon caret jb-control" ></span>
</a>
<ul jb-type='MenuItemsContainer' class="dropdown-menu jb-control" >@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "UsersList", "Retrieve")) {
<li jb-id='ManageUsers' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.ManageUsersMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-user jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_ManageUsers").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "PermissionsList", "Retrieve")) {
<li jb-id='ManagePermissions' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.ManagePermissionsMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-tags jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_ManagePermissions").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "RolesList", "Retrieve")) {
<li jb-id='ManageRoles' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.ManageRolesMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-tags jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_ManageRoles").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "OperationsList", "Retrieve")) {
<li jb-id='ManageOperations' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.ManageOperationsMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-tags jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_ManageOperations").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "ApplicationSettingsList", "Retrieve")) {
<li jb-id='ManageSettings' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.ManageSettingsMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-tags jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_ManageSettings").ToXssSafeString())</span>
</a>
</li>
}
</ul>
</li>
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "ChangePassword", "Render")) {
<li jb-id='MasterChangePassword' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.MasterChangePasswordMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-lock jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_MasterChangePassword").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "UserPreferences", "Render")) {
<li jb-id='MasterPreferences' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.MasterPreferencesMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-stats jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_MasterPreferences").ToXssSafeString())</span>
</a>
</li>
}
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "SignOutPage", "SignOut")) {
<li jb-id='MasterSignOut' jb-type='MenuItem' class="jb-control jb-direct-link"   ng-click="eventCallbacks.MasterSignOutMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="glyphicon glyphicon-log-out jb-control" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_MasterSignOut").ToXssSafeString())</span>
</a>
</li>
}
</ul>
</li>
@if (zAppDev.DotNet.Framework.Identity.Model.ClaimPermission.CheckAccess(zAppDev.DotNet.Framework.Identity.Model.ClaimTypes.ControllerAction, "SignInPage", "Load")) {
<li jb-id='MasterSignIn' jb-type='MenuItem' class="navbar-right menu-root jb-control jb-direct-link jb-menu-right"   ng-click="eventCallbacks.MasterSignInMenuItemPressed($event, model, [])" data-context-items=""><a jb-type='MenuItemLabelContainer' data-toggle="dropdown" class="jb-control" ><span jb-type='MenuItemIcon' class="jb-control jb-no-icon" ></span>
<span jb-type='MenuItemLabel' class="jb-control" >@(GetResource("RES_MenuBar_MENU_ITEM_MasterSignIn").ToXssSafeString())</span>
</a>
</li>
}
</ul>
</div>
</div>
<div jb-id='MasterPageLayout' jb-type='ResponsiveTable' class="jb-control " ><div jb-id='MasterPageRowControl' jb-type='ResponsiveRow' class="row jb-control" style="padding: 0px;"><div jb-id='MasterPageCellControl' jb-type='ResponsiveColumn' class="hfill-body col-md-12 jb-control" ><div jb-id='MasterPageLayout1' jb-type='ResponsiveTable' class="master-page-header jb-control " style="padding: 10px 50px;"><div jb-id='MasterPageRowControl1' jb-type='ResponsiveRow' class="row jb-control" ><div jb-id='MasterPageCellControl1' jb-type='ResponsiveColumn' class="col-md-10 jb-control" ><label rule-apply="true" jb-id='MasterTitle1' jb-type='Label' class="jb-control " style="margin-top: 10px;" ng-bind="model.Title"data-binding-type="string" @RulesHelper.Attribute("cf-HideEmptyTitleMasterConditional", "{`whenTrue`: [`Hide|`], `whenFalse`: [`Show|`]}")   ui-role-font-size='lg'>@GetResource("RES_LABEL_MasterTitle1")</label>
</div>
<div jb-id='MasterPageCellControl2' jb-type='ResponsiveColumn' class="col-md-2 jb-control" ><label title='@GetResource("RES_TOOLTIP_MasterUnsavedChangesLabel")' rule-apply="true" jb-id='MasterUnsavedChangesLabel' jb-type='Label' class="pull-right jb-control " style="position: fixed;
    right: 20px;" @RulesHelper.Attribute("cf-PendingChangesMasterConditional", "{`whenTrue`: [`Show|`], `whenFalse`: [`Hide|`]}")   ui-role-color='danger' ui-role-font-size='sm'ui-variation='Badge'>@GetResource("RES_LABEL_MasterUnsavedChangesLabel")</label>
</div>
</div>
</div>
<div jb-id='MasterPageBodyContainer' jb-type='BodyContainer' class="master-page-body-container jb-control container-fluid" style="flex: 1 0 auto;
padding-bottom: 20px;
margin: 10px 40px;">@RenderBody()
</div>
</div>
</div>
</div>
</div>
</div>
<!-- Helper Elements and Theme Based Templates -->
<div class='jb-modal-overlay'></div>
<div id='JooveBoxControlTemplates'>
<div jb-type='Modal' class="jb-control modal-dialog" ><div jb-type='ModalContent' class="jb-control modal-content" ><div jb-type='ModalHeader' class="jb-control modal-header" ><label jb-id='_modalTitle' jb-type='Label' class="jb-control "   >@GetResource("RES_LABEL__modalTitle")</label>
<label jb-id='_modalCancelButton' jb-type='Label' class="popup-close-button jb-control "   >&times;</label>
</div>
<div jb-type='ModalBody' class="jb-control modal-body" ></div>
<div jb-type='ModalFooter' class="jb-control modal-footer" ><button jb-id='_modalOKButton' jb-type='Button' class="jb-control btn btn-primary "    ui-role-color='primary' ui-role-element-size='med'><label jb-type='Label' class="jb-control "   >@GetResource("RES_LABEL_")</label>
</button>
<button jb-id='_modalCancelButton' jb-type='Button' class="jb-control btn btn-default "    ui-role-color='default' ui-role-element-size='med'><label jb-type='Label' class="jb-control "   >@GetResource("RES_LABEL_")</label>
</button>
</div>
</div>
</div>
<div jb-type='Slide' class='slide-popup'><button id='_modalCancelButton' jb-id='_modalCancelButton' class='popup-close-button'>&times;</button></div>
</div>
</body>
</html>
